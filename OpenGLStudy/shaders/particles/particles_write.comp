#version 440

layout (local_size_x = 512) in;

#include "../noise/hash.glsl"
#include "particles_common.glsl"

void main()
{
	uint particleIndex = gl_GlobalInvocationID.x;
	uint particleID = particleIndex + 1;
	vec3 pos = sourceParticles[particleIndex].position;
	ivec3 particleCell = ivec3(pos) * ivec3(PARTICLES_PER_CELL, 1, 1);

	for (int i = 0; i < PARTICLES_PER_CELL; i++)
	{
		//uint previousID = imageAtomicCompSwap(particleMapImage, particleCell + ivec3(i, 0, 0), particleID, particleID);
		//if (previousID == particleID)
		//	return;

		uint storedID = imageAtomicCompSwap(particleMapImage, particleCell + ivec3(i, 0, 0), NULL_ID, particleID);
		if (storedID == NULL_ID)
			return;
	}
}